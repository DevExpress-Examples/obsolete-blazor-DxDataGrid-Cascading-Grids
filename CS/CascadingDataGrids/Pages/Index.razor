@page "/"

@using CascadingDataGrids.Data
@inject WeatherForecastService ForecastService

@if (regions == null) {
    <h1>Loading...</h1>
}
else {
    <DxDataGrid Data=@regions ShowPager="false" ShowFilterRow=false
            SingleSelectedDataRowChanged=@((dataItem) => OnCategorySelectionChanged(dataItem))>
        <DxDataGridColumn Field=@nameof(Region.RegionName)></DxDataGridColumn>
    </DxDataGrid>
}

@if (forecasts == null) {
    <div>Select a region</div>
}
else {
    <DxDataGrid Data=@forecasts ShowPager="false" ShowFilterRow=false>
        <DxDataGridDateEditColumn Field=@nameof(WeatherForecast.Date) DisplayFormat="dd/MM/yyyy"></DxDataGridDateEditColumn>
        <DxDataGridColumn Field=@nameof(WeatherForecast.Region)></DxDataGridColumn>
        <DxDataGridColumn Field=@nameof(WeatherForecast.TemperatureC) Caption="Temp. (C)"></DxDataGridColumn>
        <DxDataGridSpinEditColumn Field=@nameof(WeatherForecast.TemperatureF) Caption="Temp. (F)"></DxDataGridSpinEditColumn>
        <DxDataGridColumn Field=@nameof(WeatherForecast.Summary)></DxDataGridColumn>
    </DxDataGrid>
}

@code {
    List<WeatherForecast>? forecasts;
    List<Region>? regions;
    protected override async Task OnInitializedAsync() {
        regions = await ForecastService.GetRegions();
    }
    async void OnCategorySelectionChanged(Region selectedRegion) {
        if (selectedRegion == null)
            forecasts = null;
        else
            forecasts = await ForecastService.GetForecastAsync(selectedRegion.RegionName);
        await InvokeAsync(StateHasChanged);
    }
}
